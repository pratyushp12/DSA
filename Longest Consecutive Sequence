/*
Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.

 

Example 1:

Input: nums = [100,4,200,1,3,2]
Output: 4
Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.
Example 2:

Input: nums = [0,3,7,2,5,8,4,6,0,1]
Output: 9

Input: nums = [], [1,0,1,2]
Output: 0 3

*/

// O(nlogn) - sort the array and linearly travese and increase the count if nums[i]+1==nums[i+1] , continue if nums[i]==nums[i+1] , if(size==0) return 0; else return maxcount+1

class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        if(nums.size()==0)
            return 0;
        sort(nums.begin(),nums.end());
        int max_count=0,count=0;
        for(int i=0;i<nums.size()-1;i++){
            if(nums[i+1]==nums[i]+1)
                count++;
            else if(nums[i+1]==nums[i])
                continue;
            else
                count=0;
            max_count=max(count,max_count);
        }
       return max_count+1;
    }
};

//O(n)

