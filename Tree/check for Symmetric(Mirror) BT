Given the root of a binary tree, check whether it is a mirror of itself (i.e., symmetric around its center).

Example 1:

Input: root = [1,2,2,3,4,4,3]
Output: true
Example 2:


Input: root = [1,2,2,null,3,null,3]
Output: false

class Solution {
public:
    
    bool isMirror(TreeNode *t1, TreeNode *t2){
        if(t1==NULL || t2==NULL)
            return t1==t2;
        if(t1->val!=t2->val)
            return false;
        bool res1=isMirror(t1->left,t2->right);
        bool res2=isMirror(t1->right,t2->left);
        return res1&&res2;
    }
    
    bool isSymmetric(TreeNode* root) {
        return isMirror(root,root);
    }
};
