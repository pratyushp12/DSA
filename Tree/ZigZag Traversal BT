Given the root of a binary tree, return the zigzag level order traversal of its nodes' values. (i.e., from left to right, then right to left for the next level 
and alternate between).


class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> res;
        if(root==NULL)
            return res;
        queue<TreeNode*> q;
        q.push(root);
        bool isEven=true;
        while(!q.empty()){
            int cap=q.size();
            vector<int> innerRes;
            for(int i=0;i<cap;i++){
                TreeNode *x=q.front();
                if(x->left)
                    q.push(x->left);
                if(x->right)
                    q.push(x->right);
                q.pop();
                innerRes.push_back(x->val);
            }
            if(isEven)
            res.push_back(innerRes);
            else{
                reverse(innerRes.begin(),innerRes.end());
                res.push_back(innerRes);
            }
            isEven=!isEven;
        }
        return res;
    }
};
